#!/bin/bash
# Script to fetch multiple Pokémon data in parallel

POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
OUTPUT_DIR="pokemon_data_parallel"
MAX_RETRIES=3

# Create output directory if it doesn't exist
mkdir -p "$OUTPUT_DIR"

fetch_pokemon() {
    local pokemon=$1
    local attempt=1
    local success=false

    echo "Fetching data for $pokemon..."

    while [ $attempt -le $MAX_RETRIES ]; do
        RESPONSE=$(curl -s -w "%{http_code}" -o "$OUTPUT_DIR/$pokemon.json" "https://pokeapi.co/api/v2/pokemon/$pokemon")
        
        if [[ "$RESPONSE" == "200" ]]; then
            echo "Saved data to $OUTPUT_DIR/$pokemon.json ✅"
            success=true
            break
        else
            echo "Attempt $attempt for $pokemon failed (status: $RESPONSE). Retrying..."
            attempt=$((attempt+1))
            sleep 1
        fi
    done

    if [ "$success" = false ]; then
        echo "Failed to fetch $pokemon after $MAX_RETRIES attempts." >> errors_parallel.txt
    fi
}

# Loop and run fetches in background
for pokemon in "${POKEMON_LIST[@]}"; do
    fetch_pokemon "$pokemon" &
done

# Wait for all background jobs to finish
wait

echo "All Pokémon data fetches complete."
